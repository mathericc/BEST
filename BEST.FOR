c23456 First Line of program best rewrite

	  Program Best

	  IMPLICIT REAL*8 (A-H,O-Z) 
	  DOUBLE PRECISION NAME
	  DIMENSION RCC(111,7), TITLE(20), VB(111), PH(111), NAME(7)
	  DIMENSION AA(111,7), T(111,7)
	  DIMENSION CC(7),CS(111), Y(7), PHCALC(111), A(7,7)
	  DIMENSION D(7)
	  REAL*8 MMC(7), LBETA(111), MMACID, NB
	  INTEGER*2 BELL
	  INTEGER IS(111,7), IC(7)
	  CHARACTER*2 NSTR
	  COMMON /AINP/ SIGFIT, IS, IC, VB, PH, LBETA, MMC, NAME, TITLE
	  COMMON /AAAA/ BELL, I1, I2, ISTEP, NDP, NS, NC, AA, RCC, T
	  COMMON /BBBB/ PHCOR, VO, NB, MMACID
	  COMMON /CCCC/ CC, CS, PHCALC
	  COMMON /DDDD/ NOPT, FAST
	  COMMON /EEEE/ A
	  COMMON /GGGG/ NREF
	  COMMON /LLLL/ LUNI, LUNO
	  OPEN(1, FILE='FOR001.DAT', STATUS='UNKNOWN')
	  OPEN(7, FILE='ERROR.DAT', STATUS='UNKNOWN')
	  NREF = 0
	  BELL = 7
	  LUNI = 5
	  LUNO = 6
	  FAST = 1.
	  WRITE(LUNO, 1) BELL
1	  FORMAT(21X, 'PROGRAM BEST'), /
	 1,21X,'RAMUNAS J. MONTEKAITIS'/
	 2,21X,'VERSION 10/10/91',A4,/
	 3,21X,'REAL*8  VARIABLES',//) 
	  WRITE(LUNO, 101)
101	  FORMAT(//,'FILE USAGE:')
	  WRITE(LUNO, 102)
102	  FORMAT('FOR001.DAT - OUTPUT', /,  
	 1' FOR002.DAT - SCRATCH (COMPONENTS)',/,
	 2' FOR003.DAT - SCRATCH (LOG BETA VALUES)',/,
	 3' FOR004.DAT - INPUT (ORIGINAL DATA)',/,
	 4' ERROR.DAT - (LOGGING OPTION 31)',/)
9	  FORMAT(I3)
	  DO 88 K = 1,7
	  DO 88 I = 1,111
88	  RCC(I,K) = 0.
	  MM = 0
27	  CALL INPUT(MM)
	  I1 = 1
	  I2 = NDP
	  ISTEP = 1
	  CALL OPTION
	  NDUM = 1
	  CALL BODY(NDUM)
	  GO TO 98
45	  CALL REFINE
	  GO TO 98
36	  CALL OUTPUT
98	  WRITE(LUNO, 77) BELL
77	  FORMAT(/,1X,A4,'27=TOP 36=OUTPUT 45=REFINE 54=OPTIONS', 
	 1' 63=COMPUTE 72=STOP?',$)
	  READ(LUNI,99) NSTR
99    FORMAT(A2)
	  IF(NSTR.EQ.'27') GO TO 27
	  IF(NSTR.EQ.'36') GO TO 36
	  IF(NSTR.EQ.'45') GO TO 45
	  IF(NSTR.EQ.'54') GO TO 54
	  IF(NSTR.EQ.'63') GO TO 59
	  IF(NSTR.EQ.'72') STOP
54	  CALL OPTION
	  GO TO 98
59	  NDUM=-1
	  CALL BODY(NDUM)
	  GO TO 98
	  END 



	  SUBROUTINE OPTION
	  IMPLICIT REAL*8 (A-H,O-Z) 
	  DOUBLE PRECISION NAME
	  DIMENSION RCC(111,7), TITLE(20), VB(111), PH(111), NAME(7)
	  DIMENSION AA(111,7), T(111,7)
	  DIMENSION CC(7),CS(111), Y(7), PHCALC(111), A(7,7)
	  DIMENSION D(7), BLER(111)
	  REAL*8 MMC(7), LBETA(111), MMACID, NB
	  INTEGER IS(111,7), IC(7)
	  INTEGER*2 BELL, SILENT
	  CHARACTER*2 MCH
	  COMMON /AINP/ SIGFIT, IS, IC, VB, PH, LBETA, MMC, NAME, TITLE
	  COMMON /AAAA/ BELL, I1, I2, ISTEP, NDP, NS, NC, AA, RCC, T
	  COMMON /BBBB/ PHCOR, VO, NB, MMACID
	  COMMON /CCCC/ CC, CS, PHCALC
	  COMMON /DDDD/ NOPT, FAST
	  COMMON /EEEE/ A
	  COMMON /LLLL/ LUNI, LUNO
	  DATA SILENT /0/
	  NOPT=1
	  GO TO 70
17	  WRITE(LUNO, 2) BELL
2	  FORMAT(1X,A4,'Enter speed factor 1-5 or hit RETURN',$)
	  READ(LUNI, 21, ERR=17) I
21    FORMAT(I2)
	  IF(I.LT.0) NOPT=0
	  IF(I.GT.6) NOPT=1
	  IF(I.GT.0.AND.I.LT.6) FAST = 10.0**I
	  ISPEED=I
	  GO TO 70
18	  WRITE(LUNO, 10) BELL
10    FORMAT(1X, A4, 'INITIAL,FINAL(or -1), STEP(3I2) or RETURN', $)
	  READ(LUNI, 20,ERR=18) K1,K2,KSTEP
20 	  FORMAT(3I2)
	  IF(K1.GT.0.AND.K1.LE.NDP) I1 = K1
	  IF(K2.GT.0.AND.K2.LE.NDP)	I2 = K2
	  IF(KSTEP.GT.0) ISTEP = KSTEP
	  IF(K2.LT.0) I2=NDP
	  GO TO 70
59    DO 60 I=1, NS
60    WRITE(LUNO,47) I,LBETA(I),(IS(I,K),NAME(K),K=1, NC)
47    FORMAT(1X,I2,F9.4,1X,8(I2,A9,1X))
48    WRITE(LUNO, 49) BELL
49	  FORMAT(1X, A4, 'ENTER "I" OF LOG BETA TO CHANGED or RETURN',$)
	  READ(LUNI, 51, ERR=48) I
51	  FORMAT(I2)
	  IF(I.LT.1) GO TO 70
	  IF(I.GT.NS) GO TO 48
56 	  WRITE(LUNO, 53) BELL,I
53 	  FORMAT(1X, A4, 'ENTER NEW LOG BETA(',I2,')?',$)
      READ(LUNI, 57, ERR=56) LBETA(I)
57	  FORMAT(F10.6)
	  GO TO 59
	  WRITE(LUNO,68)
68    FORMAT(' OPTIONS:')
      WRITE(LUNO,69) ISPEED,I1,I2,ISTEP
69    FORMAT(5X,'14=REMOVE OR ADD DATA',/,5X,
     X'16=SILENT MODE(15=RESTORE)',/,5X,
     X'17=SPEED FACTOR(',I2,')',/,5X,
     X'18=POINTS(',3I3,')',/,5X,
     X'19= BETA VALUES')
	 WRITE(LUNO,71) BELL, NB, MMACID,VO,PHCOR
71    FORMAT (1X,A4, 1X,'20= MILLIMOLES',/,5X,
     X'21=NORMALITY BASE(',F9.5,')',/,5X,
	 X'22=MILLIMOLES EXCESS ACID(',F9.5,')',/,5X,
	 X'23=INITIAL VOLUME(',F9.5,')',/,5X,
	 X'24=(RETURN) = END OF CHANGES ?',/,5X,
	 X'25=PARABOLIC FUNCTION ?',/,5X,
	 X'26=APPORTION REMAINDER HYDROGEN TO EXCESS ACID ?',/,5X,
	 X'27=READ CURRENT LOG BETA VALUES ?',/,5X,
	 X'28=READ CURRENT MILLIMOLES ?',/,5X,
	 X'29=CORRECTION ON PH CALCD(',F6.3,')?',/,5X,
	 X'30=AUTOREFINE MILLIMOLES ?',/,5X,
	 X'31=ERROR ANALYSIS ?',$)
	 READ (LUNI,52) MCH
52	  FORMAT (A2)
	  IF(MCH.EQ.' '.OR.MCH.EQ.'24'.OR.MCH.EQ.'63') GO TO 80
	  IF(MCH.EQ.'14') GO TO 5300
	  IF(MCH.EQ.'15') BELL=7
	  IF(MCH.EQ.'16') BELL=SILENT
	  IF(MCH.EQ.'17') GO TO 17
	  IF(MCH.EQ.'18') GO TO 18
	  IF(MCH.EQ.'19') GO TO 59
	  IF(MCH.EQ.'20') GO TO 75
	  IF(MCH.EQ.'21') GO TO 5225
	  IF(MCH.EQ.'22') GO TO 5225
	  IF(MCH.EQ.'23') GO TO 5225
	  IF(MCH.EQ.'24') GO TO 80
	  IF(MCH.EQ.'25') CALL PARB
	  IF(MCH.EQ.'26') GO TO 5250
	  IF(MCH.EQ.'27') GO TO 5215
	  IF(MCH.EQ.'28') GO TO 5220
	  IF(MCH.EQ.'29') GO TO 5225
	  IF(MCH.EQ.'30') CALL STOICH(NC, NS)
	  IF(MCH.EQ.'31') CALL ERROR
	  GO TO 70
5225  CONTINUE
	  WRITE(LUNO,73) BELL
73	  FORMAT(1X,A4,'NOW TYPE IN VALUE?',$)
	  IF(MCH.EQ.'21') READ (LUNI,57, ERR=5228) NB
	  IF(MCH.EQ.'22') READ (LUNI,57,ERR=5228) MMACID
	  IF(MCH.EQ.'23') READ (LUNI,57,ERR=5228) VO
	  IF(MCH.EQ.'29') READ(LUNI,57,ERR=5228) PHCOR
	  GO TO 70
75	  WRITE(LUNO,76) (I,NAME(I),MMC(I),I=1,NC)
76	  FORMAT (1X,I2, 1X,A8, F10.5,3X, 'MMOLES')
7601  WRITE(LUNO,77) BELL
77	  FORMAT (1X,A4, 'TYPE IN "I"? or RETURN ',$)
58	  READ(LUNI,581, ERR=7601) SSI
581	  FORMAT(F2.0)
      I=SSI
	  IF(I.GT.NC) GO TO 75
	  IF(I.LE.0) GO TO 70
7801  WRITE(LUNO,78) BELL,I
78	  FORMAT (1X,A4, 'TYPE IN MMC(',I2,')? ',$)
	  READ(LUNI,57, ERR=7801) MMC(I)
	  GO TO 75
80	  MM=1
	  CALL INPUT (MM)
	  MM=0
	  RETURN
5215  OPEN (3,FILE='FOR003.DAT',STATUS='UNKNOWN')
	  READ (3,5216) (LBETA(J),J=1,NS)
5216  FORMAT(F16.6)
	  CLOSE (3)
      GO TO 5225
5220  OPEN (2, FILE='FOR002.DAT', STATUS='UNKNOWN')
	  READ (2,5216) (MMC(J),J= 1,NC),MMACID
	  CLOSE(2)
	  GO TO 5225
C*****APPORTION HYDROGEN TO MAKE SENSE OF A VALUES
5250  WRITE(LUNO,5251) BELL
5251  FORMAT (1X,A4,'ENTER COMPONENT# AND MULTIPLIER (2I2) ?',$)
	  READ (LUNI, 20, ERR=5250) NZC,NZM
	  IF(NZC.LE.0.OR.NZC.GE.NC) GO TO 5225
	  WRITE(LUNO,5252) BELL,NAME(NC),MMC(NC),MMACID
5252  FORMAT (1X,A4,A8,F10.5,'AND EXCESS ACID' F9.5, 'CONVERT TO')
	  TOTMNC = MMC(NC) + MMACID
	  MMC(NC) = NZM*MMC(NZC)
	  IF(NZM.EQ.0) MMC(NC).00001
	  MMACID=TOTMNC-MMC(NC)
	  WRITE(LUNO,5253) NAME(NC),MMC(NC),MMACID
5253  FORMAT (1X,A10,F10.5,' AND EXCESS √ÅCID ',F9.5)
	  GO TO 5225
C*****ADD OR DROP DATA POINT
5300  WRITE(LUNO,5301) BELL
5301  FORMAT (1X,A4,'"1" = ADD "-1" = DROP A POINT',$)
	  READ (LUNI,5306,ERR= 5300) NDA
	  IF(NDA.EQ.-1) GO TO 53011
	  IF(NDA.EQ.1) GO TO 53501
	  GO TO 5300
53011 WRITE(LUNO,5302) BELL, (I,VB(I),PH(I),I=1,NDP)
5302  FORMAT (1X,A4,/,(5X,110,2F8.3))
5303  WRITE(LUNO,5304) BELL
5304  FORMAT (1X,A4,
	 X'REMOVE WHICH POINT("-1" RELIST "0" RETURN)?', I2,$)
	  READ (LUNI,5306,ERR=5303) NREM
	  FORMAT(I2)
	  IF(NREM.EQ.0.OR.NREM.GT.NDP) GOTO 53528
	  IF(NREM.LT.0) GOTO 53011
	  NDP = NDP - 1
	  I2=I2-1
	  DO 5308 I = INREM,NDP
	  VB(I) =VB(I+1)
	  PH(I) = PH(L + 1)
5308  CONTINUE
	  GO TO 53011
53501 WRITE(LUNO, 5302) BELL(I, VB(I), PH(I),I= 1, NDP)
53502 WRITE(LUNO,5352) BELL
5352  FORMAT(1X, A4,
	  X'ADD IN FRONT F WICH PINT("-1" RELIST    "0" RETURN)?',$)
	  READ(LUNI, 5306, ERR = 53502) NADD
	  IF(NADD.EQ.0.OR.NADD.GT.NDP) GO TO 53528
      IF(NADD.LT.0) GO TO 53501
53521 WRITE(LUNO,53522) BELL
53522 FORMAT (1X,A4, 'VOLUME BASE ?',$)
	  READ(LUNI, 5216,ERR=53521) VOLBAS
	  NADDM = NADD -1
	  IF(NADDM.EQ.0) NADDM=NADD
	  IF(VOLBAS.EQ.VB(NADD).OR.VOLBAS.EQ.VB(NADDM)) GOTO 53521
53523 WRITE(LUNO, 53524) BELL
53524 FORMAT(1X,A4,'  LOG (H+)?',$)
	  READ( LUNI, 5216, ERR=53523) PEEH
	  IF(PEHH.EQ.PH(NADD).OR.PEEH.EQ.PH(NADDM)) GOTO 53523
	  DO 52525 I=NADD,NDP
	  II=NDP+NADD I
	  VB(II+1) = VB(II)
52525 PH(II+1) = PH(II)
	  VB(NADD) = VOLBAS
	  PH(NADD) = PEHH
	  NDP = NDP+1
	  IS = IS+1
	  GO TO 53501
52526 MM=1
	  CALL INPUT(MM)
	  MM = 0
	  NDUM = -2
	  CALL BODY(NDUM)
	  GO TO 70
	  END	  

	  SUBROUTINE STOICHING(NC,NS)
	  IMPLICIT REAL*8 (A-H,O-Z) 
	  DOUBLE PRECISION X(3), Y(3), NAME
	  DIMENSION VB(111), PH(111), NAME(7),TITLE(20), P(7)
	  DIMENSION PMME(7), PLBETA(111)
	  REAL*8 MMC(7), LBETA(111)
	  INTEGER*2 BELL
	  CHARACTER*3 ADJ
	  INTEGER IS(111,7), IC(7), MREF(7), FCT
	  COMMON /AINP/ SIGFIT, IS, IC, VB, PH, LBETA, MMC, NAME, TITLE
	  COMMON /FFFF/ X,V,XX
	  COMMOM /GGGG/ NREF
	  COMMON /LLLL/ LUNI, LUNO
	  COMMOM /MMMM/ ADJ
	  DATA LIMCNT /5/, BELL /7/
	  MCOUNT = 0
	  MM = 1
	  WRITE(LUNO, 600) BELL
600	  FORMAT(1X, A4 'REFINEMENT OF STOICHIOMETRY',/)
	  WRITE(LUNO, 6001)
6001  FORMAT(' CAUTION: Refinement of stoichiometric parameters'
	 1'is usually',/,10x,'s highly questionable procedure and'
	 2 'should be avoided',//)
	  WRITE(LUNO,601(I,NAME(I),MMC(I),I=1,NC)
601	  FORMAT(1X,I3,1X,AB,F10.5,3X,' MMOLES')
6011  WRITE(LUNO,6001)
602   FORMAT(1X,' COMPONENT NUMBERS(7I2) ?',$)
	  READ(LUNI,603,ERR=6011) (MREF (I),I=1,NC)
603	  FORMAT (7I2)
6031  WRITE(LUNO,604) BELL
604	  FORMAT(1X, A4, 'ENTER SMALL INCREMENT',$)
	  READ(LUNI,605,ERR=6031) PP
605	  FORMAT(F10.6)
	
	  IF(PP.EQ.0.0) RETURN
	  FCT = 2
6051  WRITE(LUNO,610) BELL,LIMCNT
610	  FORMAT(1X,A4, 'ENTER MAX # ITERATIONS (default', 1|3,')',$)
C*****NQUIT is a flag; 01 will FORTRAN STOP at end of this subroutine
	  READ (LUNI,603, ERR=6051) LIMCNT,NQUIT
	  if (limcnt.eq.99)limcnt=999
	  IF (LIMCNT.EQ.0) LIMCNT=5
	  CALL INPUT (MM)
	  NDUM=0
	  CALL BODY (NDUM)
	  CALL REFINE
	  WRITE(LUNO,607) (MMC (I),I=1,NC),SIGFIT
	  NREF=1
	  DO 10 I=1,NC
	  PMMC(I) = MMC(I)
10	  P(I) = PP
	  DO 11 I=1,NS
11	  PLBETA (i) = LBETA(I)
	  PSIGMA=SIGFIT
100	  SO= SIGFIT
105	  J=0
110	  S1=SIGFIT
	  J=J+1
	  M=MREF(J)
	  IF(M.GT.0)GO TO 120
	  GO TO 300
120   X(1) = MMC(M)
	  Y(1) = S1
	  MMC(M)= MMC(M) + P(J)
	  CALL INPUT (MM)
	  NDUM=0
	  CALL BODY(NDUM)
	  WRITE(LUNO,607) (MMC (1),I=1,NC),SIGFIT
	  S2 = SIGFIT
	  X(2) = MMC(M)
	  Y(2) = S2
	  IF(S2.LE.S1) GO TO 130
	  P(J)=-P(J)
	  MMC(M)=MMC(M) +2*P(J)
	  GO TO 140
130	  MMC(M)= MMC(M) + P(J)
140	  CALL INPUT (MM)
	  NDUM=0
	  CALL BODY (NDUM)
	  WRITE (LUNO,609) (MMC (I),I=1,NC),SIGFIT
	  S3=SIGFIT
	  X(3) = MMC(M)
	  Y(3)= S3
	  CALL PARB
	  Z1 = ABS(MMC(M)-XX)
	  Z2= ABS(P(J))*FCT
	  IF (Z1.LE.Z2) GO TO 150
	  x(1) = X(2)
	  Y(1) = Y(2)
	  X(2) = X(3)
	  Y(2) = Y(3)
	  GO TO 130
150	  MMC(M)=XX
	  CALL INPUT (MM)
	  NDUM=0
	  CALL BODY (NDUM)
	  WRITE(LUNO,609) (MMC (I),I=1,NC), SIGFIT

160   IF(J.LT.NC) GO TO 110
300   CONTINUE
      NCOUNT= NCOUNT+1
      WRITE(LUNO,606) NCOUNT
606   FORMAT (1X, 'Refining Beta (s)****************',
     1'****************',I6)
	  CALL REFINE
	  WRITE(LUNO,6072) SIGFIT, (LBETA(I),I=1,NS)
6072  FORMAT(1X,'SIG(    )=',F8.6,2X,6(F8.4,1x),/,
	 X (19X,F8.4, 1x, F8.4, 1x,
     1 F8.4,1x, F8.4,1x, F8.4,1x,F8.4,1x))
      WRITE(LUNO,607)
      SOMSF= S0-SIGFIT
	  WRITE(LUNO,609) (MMC (I),I=1,NC),SIGFIT,SOMSF
609   FORMAT('+',8F10.6)
607   FORMAT (1X,8F10.6)
	  COUNT=0.00000
690   DO 710 I=1,NS
	  DIFF=LBETA(I)-PLBETA(I)
	  PLBETA(I)=LBETA(I)
710   LBETA(I)=LBETA(I)+DIFF*0.66666
      DO 720 I=1,NC
      DIFF=MMC(I)-PMMC(I)
      PMMC(I)=MMC(I)
720   MMC(I)=MMC(I)+DIFF*0.66666
      PSIG=SIGFIT
      NDUM=0
      CALL BODY (NDUM)
      COUNT=COUNT +1.0000
      WRITE(LUNO,6075) (MMC(I),I=1,NC), SIGFIT,COUNT
6075  FORMAT(' ',8F10.6)
      IF(SIGFIT.LT.PSIG.AND.COUNT.LT.11) GO TO 690
      DO 740 I=1,NS
740	  LBETA(I)=PLBETA(I)
	  DO 750 I=1,NC
750	  MMC(I)=PMMC (I)
	  SIGFIT=PSIG
	  WRITE (LUNO,607) (MMC (I),I=1,NC),SIGFIT
	  IF(NCOUNT.GE.LIMCNT) GOTO 170
	  IF ((S0-SIGFIT).GE.0.0000005) GO TO 100
170   IF(NCOUNT.GE.LIMCNT) WRITE(LUNO,6071)
6071  FORMAT(' ITERATION LIMIT EXCEEDED')
      WRITE(LUNO,608) BELL
608   FORMAT (1X,A4,'*** END OF MMOLE REFINEMENT ***')
C*****ADJ="YES" IS A FLAG TO "OUTPUT" TO INDICATE "STOICH" WAS USED
      ADJ= 'YES'
      NREF=0
      IF(NQUIT.EQ.1) STOP
      RETURN
      END


	  SUBROUTINE INPUT(MM)
	  IMPLICIT REAL*8 (A-H,O-Z)
	  DOUBLE PRECISION NAME,RNAM
	  DIMENSION RCC(111,7), TITLE (20), VB(111), PH(111),NAME(7)
	  DIMENSION AA(111,7),T(111,7)
	  DIMENSION CC(7),CS(111),Y(7),PHCALC(111),A(7,7)
	  DIMENSION D(7),BLER(111)
	  REAL *8 MMC(7),LBETA(111), MMACID, NB
	  INTEGER *2 BELL
	  INTEGER IS(111,7),IC(7)
	  CHARACTER *2 ECHO
	  COMMON/AINP/ SIGFIT,IS,IC,VB, PH,LBETA,MMC,NAME,TITLE
	  COMMON/AAAA/ BELL,I1,I2,ISTEP,NDP,NS, NC,AA,RCC,T
	  COMMON/BBBB/ PHCOR,VO,NB,MMACID
	  COMMON/CCCC/ CC,CS,PHCALC
	  COMMON/DDDD/ NOPT,FAST
	  COMMON/EEEE/ A
	  COMMON/KKKK/ BLER
	  COMMON/LLLL/ LUNI,LUNO
	  DATA ECHO/'N'/
	  IF(MM.EQ.1) GO TO 111
	  OPEN (4,FILE='FOR004.DAT',STATUS='OLD')
	  WRITE(LUNO,6610) BELL
6610  FORMAT(A4, 'Do you want input file ECHO (Y/N) ?',$)
	  READ (LUNI,6611) ECHO
6611  FORMAT(A1)
	  IF(ECHO.EQ.'y') ECHO ='Y'
	  IF(ECHO.EQ.'Y') WRITE(LUNO,610)
610	  FORMAT( 'DISK INPUT FILE ECHO:')
	  READ (4,601) (TITLE(I),I=1,20)
601	  FORMAT (20A4)
	  IF(ECHO.EQ. 'Y') WRITE(LUNO,611) (TITLE(I),I=1,20)
611	  FORMAT (1X,20A4)
	  K=1
10	  READ (4,602) RNAM,RMMC,RRCC
602	  FORMAT (A8,3F8.5)
	  IF(ECHO.EQ.'Y')WRITE(LUNO,612) RNAM,RMMC,RRCC
612	  FORMAT (1X,A8,3F8.5)
      IF(RMMC.LE.0.) GO TO 12 
	  NAME(K)=RNAM
	  MMC(K)=RMMC
	  RCC(1,K)=RRCC
	  IF(RCC(1,K).NE.0.) RCC(1,K) = 10.0**RCC(1,K)
	  K=K+1
	  GO TO 10
12	  NC=K-1
	  NCM1 = NC-1
	  READ(4,502) VO,NB,MMACID, PHCOR
	  IF(ECHO.EQ.'Y') WRITE (LUNO,503) VO, NB, MMACID, PHCOR
503	  FORMAT (1X,9F8.4)
	  I = 1
100	  READ (4,603) LBETA(I), (IC(K),IS(I,K),K=1,NC)
603	  FORMAT(F8.5,14(I2,I3))
	  IF(ECHO.EQ.'Y')
	 X WRITE(LUNO,613) LBETA(I), (IC(K), IS(I,K), K=1, NC)
613   FORMAT(1X,F9.5,14(I2,I3,2X))
C*****INITIALIZING BLER ONLY WHEN FOR004.DATA IS READ OR REREAD	 
	  BLER(I)=0
	  IF(IC(1).EQ.0) GO TO 102
	  I=I+1
	  GO TO 100
102	  NS= I-1
101   CONTINUE
105	  I = 1
104	  READ (4,502, END=106) VB(I),PH(I), (RCC(I,K), K=1,NC)
	  IF(ECHO.EQ.'Y')
	 X WRITE(LUNO,502) VB (I),PH (I), (RCC(I,K),K=1,NC)
502	  FORMAT(10F8.4)
	  IF(RCC(1,NCM1).EQ.0.0) WRITE(LUNO,633) BELL
633	  FORMAT (1X,A4, 'FIRST DATA POINT NEEDS A GUESS VALUE')
	  I=I+1
	  GO TO 104
106	  IF(ECHO.EQ.'Y') WRITE(LUNO,630)
630	  FORMAT('INPUT ECHO COMPLETE')
	  NDP = I-1

